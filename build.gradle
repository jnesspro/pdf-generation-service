def ver = '1.0.06d2017.7.03'
version ver
project.properties.version = ver

buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
        slf4jVersion = '1.7.21'
        logbackVersion = '1.1.7'
        velocityVersion = '1.7'
        xdocreportVersion = '2.0.1'
        batikSvggenVersion = '1.9'
        poiVersion = '3.16'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

def profile = project.getProperties().get("profile") ?: "dev"

processResources {
    filesMatching('application.yml') {
        expand(project.properties)
    }
}

war {
    baseName = 'pdf-generation-service'
    version = ver
}

bootRepackage {
    mainClass = 'pro.jness.pdf.Application'
    excludeDevtools = true
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "src/main/profile/${profile}"]
        }
        output.resourcesDir = "${project.buildDir}/resources/${profile}"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile("org.springframework:spring-context-support")

    compile("org.apache.velocity:velocity:${velocityVersion}")

    //    Utils
    compile('com.google.code.gson:gson:2.7')
    compile('jboss:javassist:3.7.ga')
    compile("org.apache.commons:commons-lang3:3.5")

    compile("org.apache.xmlgraphics:batik-svggen:${batikSvggenVersion}")
    compile("fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.odt:${xdocreportVersion}")
    compile("fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.docx:${xdocreportVersion}")
    compile("fr.opensagres.xdocreport:fr.opensagres.xdocreport.template.freemarker:${xdocreportVersion}")
    compile("fr.opensagres.xdocreport:fr.opensagres.xdocreport.template.velocity:${xdocreportVersion}")
    compile("fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.odt.odfdom:${xdocreportVersion}")
    compile("fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.docx.docx4j:${xdocreportVersion}")

    compile("org.apache.poi:poi:${poiVersion}")
    compile("org.apache.poi:poi-ooxml:${poiVersion}")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}